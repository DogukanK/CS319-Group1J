
package group1j.ReviewTool.UserInterface.screens;

import group1j.ReviewTool.BusinessLogic.PeerReview;
import group1j.ReviewTool.BusinessLogic.Assignment;
import group1j.ReviewTool.BusinessLogic.Student;
import group1j.ReviewTool.BusinessLogic.User;
import group1j.ReviewTool.BusinessLogic.Group;
import group1j.ReviewTool.BusinessLogic.ArtifactReview;
import group1j.ReviewTool.BusinessLogic.*;
import group1j.ReviewTool.UserInterface.factories.*;
import group1j.ReviewTool.UserInterface.UIController;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.*;
import java.awt.event.*;
import java.io.File;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;

/**
 * @author anilt
 * This is the InstructorScreen class:
 * Holds code generated by the NetBeans UI Builder and
 * event handling code for the UI. 
 */
public class InstructorScreen extends javax.swing.JFrame implements ScreenInterface{

    private ArrayList<JPanel> switchingPanels;
    private static Group selectedGroup;
    private static Student selectedUser;
    private static Assignment selectedAssignment;
    private static String selectedArtifact;
    private static ArrayList<ArtifactReview> selectedReviews;
    
    /**
     * Creates new form InstructorScreen
     */
    public InstructorScreen() {
        initComponents();
        setIcons();
        switchingPanels = new ArrayList<>();
        switchingPanels.add(groupsPanel);
        switchingPanels.add(assignmentsPanel);
        switchingPanels.add(selectedGroupPanel);
        switchingPanels.add(peerReviewsPanel);
        switchingPanels.add(viewArtifactsPanel);
        switchingPanels.add(artRevPanel);
    }
    
    
    @Override
    public void refreshUI(){

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        createGroupDialog = new javax.swing.JDialog();
        cDialogPanel = new javax.swing.JPanel();
        cDialogTopInternalPanel = new javax.swing.JPanel();
        concealingPanel = new javax.swing.JPanel();
        cDialogText2 = new javax.swing.JLabel();
        cDialogTextField = new javax.swing.JTextField();
        cDialogBottomInternalPanel = new javax.swing.JPanel();
        cDialogText1 = new javax.swing.JLabel();
        cDialogScrollPane = new javax.swing.JScrollPane();
        cDialogTable = new javax.swing.JTable();
        cDialogButton = new javax.swing.JButton();
        cDialogButton.setFocusPainted(false);
        createAssignmentDialog = new javax.swing.JDialog();
        aDialogPanel = new javax.swing.JPanel();
        aDialogText1 = new javax.swing.JLabel();
        aDialogTextField = new javax.swing.JTextField();
        aDialogText2 = new javax.swing.JLabel();
        aDialogButton = new javax.swing.JButton();
        aDialogText3 = new javax.swing.JLabel();
        datePicker = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        aDialogTextArea = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        errorBox = new javax.swing.JDialog();
        errorBoxPanel = new javax.swing.JPanel();
        errorText = new javax.swing.JLabel();
        errorButton = new javax.swing.JButton();
        selectAssnDialog = new javax.swing.JDialog();
        cDialogPanel1 = new javax.swing.JPanel();
        cDialogTopInternalPanel1 = new javax.swing.JPanel();
        concealingPanel1 = new javax.swing.JPanel();
        cDialogText3 = new javax.swing.JLabel();
        cDialogTextField1 = new javax.swing.JTextField();
        cDialogBottomInternalPanel1 = new javax.swing.JPanel();
        cDialogText4 = new javax.swing.JLabel();
        cDialogScrollPane1 = new javax.swing.JScrollPane();
        selectAssnTable = new javax.swing.JTable();
        selectAssnButton = new javax.swing.JButton();
        cDialogButton.setFocusPainted(false);
        leftPanel = new javax.swing.JPanel();
        groupsButton = new javax.swing.JToggleButton();
        groupsButton.setFocusPainted(false);
        assignmentsButton = new javax.swing.JToggleButton();
        assignmentsButton.setFocusPainted(false);
        topPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        showTime();
        middlePanel = new javax.swing.JPanel();
        groupsPanel = new javax.swing.JPanel();
        newGroupButton = new javax.swing.JButton();
        newGroupButton.setFocusPainted(false);
        groupsScrollPane = new javax.swing.JScrollPane();
        groupsInternalPanel = new javax.swing.JPanel();
        showInitialGroups();
        peerReviewEnableButton = new javax.swing.JButton();
        newGroupButton.setFocusPainted(false);
        assignmentsPanel = new javax.swing.JPanel();
        assignmentsScrollPane = new javax.swing.JScrollPane();
        assignmentsInternalPanel = new javax.swing.JPanel();
        showInitialAssignments();
        newAssignmentButton = new javax.swing.JButton();
        selectedGroupPanel = new javax.swing.JPanel();
        selectedGroupScrollPane = new javax.swing.JScrollPane();
        selectedGroupInternalPanel = new javax.swing.JPanel();
        addMemberButton = new javax.swing.JButton();
        viewArtifactsButton = new javax.swing.JButton();
        peerReviewsPanel = new javax.swing.JPanel();
        prLeftPanel = new javax.swing.JPanel();
        prLabel = new javax.swing.JLabel();
        prLabel2 = new javax.swing.JLabel();
        prScrollPane = new javax.swing.JScrollPane();
        prTextPane = new javax.swing.JTextPane();
        prLabel3 = new javax.swing.JLabel();
        viewArtifactsPanel = new javax.swing.JPanel();
        vaSP = new javax.swing.JScrollPane();
        vaIP = new javax.swing.JPanel();
        assnNameLabel = new javax.swing.JLabel();
        assnLabel3 = new javax.swing.JLabel();
        dueDateLabel = new javax.swing.JLabel();
        descSP = new javax.swing.JScrollPane();
        assnDescField = new javax.swing.JTextPane();
        assnLabel2 = new javax.swing.JLabel();
        artRevPanel = new javax.swing.JPanel();
        anLabel = new javax.swing.JLabel();
        gnLabel = new javax.swing.JLabel();
        artSP = new javax.swing.JScrollPane();
        artIP = new javax.swing.JPanel();
        avatarIcon = new javax.swing.JLabel();
        reviewTF = new javax.swing.JTextField();
        addArtReview = new javax.swing.JButton();
        downloadArtButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();

        createGroupDialog.setTitle("Create New Group");
        createGroupDialog.setModal(true);
        createGroupDialog.setResizable(false);
        createGroupDialog.setSize(new java.awt.Dimension(415, 340));
        createGroupDialog.setLocationRelativeTo(this);
        createGroupDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cDialogPanel.setBackground(new java.awt.Color(255, 255, 255));
        cDialogPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cDialogTopInternalPanel.setBackground(new java.awt.Color(23, 35, 51));

        concealingPanel.setBackground(new java.awt.Color(23, 35, 51));

        javax.swing.GroupLayout concealingPanelLayout = new javax.swing.GroupLayout(concealingPanel);
        concealingPanel.setLayout(concealingPanelLayout);
        concealingPanelLayout.setHorizontalGroup(
            concealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        concealingPanelLayout.setVerticalGroup(
            concealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 88, Short.MAX_VALUE)
        );

        cDialogText2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cDialogText2.setForeground(new java.awt.Color(255, 255, 255));
        cDialogText2.setText("Group Name:");

        javax.swing.GroupLayout cDialogTopInternalPanelLayout = new javax.swing.GroupLayout(cDialogTopInternalPanel);
        cDialogTopInternalPanel.setLayout(cDialogTopInternalPanelLayout);
        cDialogTopInternalPanelLayout.setHorizontalGroup(
            cDialogTopInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cDialogTopInternalPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(cDialogText2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cDialogTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(cDialogTopInternalPanelLayout.createSequentialGroup()
                .addComponent(concealingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        cDialogTopInternalPanelLayout.setVerticalGroup(
            cDialogTopInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cDialogTopInternalPanelLayout.createSequentialGroup()
                .addComponent(concealingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(cDialogTopInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cDialogText2, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(cDialogTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );

        cDialogPanel.add(cDialogTopInternalPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 60));

        cDialogBottomInternalPanel.setBackground(new java.awt.Color(23, 35, 51));
        cDialogBottomInternalPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cDialogText1.setBackground(new java.awt.Color(23, 35, 51));
        cDialogText1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cDialogText1.setForeground(new java.awt.Color(255, 255, 255));
        cDialogText1.setText("                               Unassigned Student List");
        cDialogBottomInternalPanel.add(cDialogText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 399, 31));

        cDialogTable.setBackground(new java.awt.Color(255, 255, 255));
        cDialogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cDialogScrollPane.setViewportView(cDialogTable);

        cDialogBottomInternalPanel.add(cDialogScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 31, 399, 170));

        cDialogButton.setText("Create Group");
        cDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cDialogButtonActionPerformed(evt);
            }
        });
        cDialogBottomInternalPanel.add(cDialogButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 130, 20));

        cDialogPanel.add(cDialogBottomInternalPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 400, 240));

        createGroupDialog.getContentPane().add(cDialogPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        createAssignmentDialog.setTitle("Create New Assignment");
        createAssignmentDialog.setModal(true);
        createAssignmentDialog.setResizable(false);
        createAssignmentDialog.setSize(new java.awt.Dimension(415, 340));
        createAssignmentDialog.setLocationRelativeTo(this);
        createAssignmentDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        aDialogPanel.setBackground(new java.awt.Color(23, 35, 51));

        aDialogText1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        aDialogText1.setForeground(new java.awt.Color(255, 255, 255));
        aDialogText1.setText("Assignment Name:");

        aDialogTextField.setBackground(new java.awt.Color(255, 255, 255));

        aDialogText2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        aDialogText2.setForeground(new java.awt.Color(255, 255, 255));
        aDialogText2.setText("Assignment Description:");

        aDialogButton.setText("Create Assignment");
        aDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aDialogButtonActionPerformed(evt);
            }
        });

        aDialogText3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        aDialogText3.setForeground(new java.awt.Color(255, 255, 255));
        aDialogText3.setText("Due Date:");

        jScrollPane2.setViewportView(aDialogTextArea);

        javax.swing.GroupLayout aDialogPanelLayout = new javax.swing.GroupLayout(aDialogPanel);
        aDialogPanel.setLayout(aDialogPanelLayout);
        aDialogPanelLayout.setHorizontalGroup(
            aDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aDialogPanelLayout.createSequentialGroup()
                .addGroup(aDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aDialogPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(aDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(aDialogPanelLayout.createSequentialGroup()
                                .addComponent(aDialogText1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(aDialogTextField))
                            .addGroup(aDialogPanelLayout.createSequentialGroup()
                                .addComponent(aDialogText3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(aDialogPanelLayout.createSequentialGroup()
                                .addComponent(aDialogText2)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(aDialogPanelLayout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(aDialogButton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 99, Short.MAX_VALUE))
                    .addGroup(aDialogPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        aDialogPanelLayout.setVerticalGroup(
            aDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aDialogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aDialogText1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aDialogTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(aDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(datePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aDialogText3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aDialogText2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aDialogButton)
                .addGap(30, 30, 30))
        );

        createAssignmentDialog.getContentPane().add(aDialogPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        errorBox.setTitle("Error");
        errorBox.setModal(true);
        errorBox.setSize(new java.awt.Dimension(250, 250));
        errorBox.setLocationRelativeTo(this);
        errorBox.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        errorBoxPanel.setBackground(new java.awt.Color(23, 35, 51));

        errorText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errorText.setForeground(new java.awt.Color(255, 255, 255));
        errorText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorText.setText("ERROR TEXT");

        errorButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errorButton.setText("OK");
        errorButton.setBorderPainted(false);
        errorButton.setFocusPainted(false);
        errorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout errorBoxPanelLayout = new javax.swing.GroupLayout(errorBoxPanel);
        errorBoxPanel.setLayout(errorBoxPanelLayout);
        errorBoxPanelLayout.setHorizontalGroup(
            errorBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(errorText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, errorBoxPanelLayout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addComponent(errorButton)
                .addGap(86, 86, 86))
        );
        errorBoxPanelLayout.setVerticalGroup(
            errorBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorBoxPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(errorText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(errorButton)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        errorBox.getContentPane().add(errorBoxPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 220));

        selectAssnDialog.setTitle("Create New Group");
        selectAssnDialog.setModal(true);
        selectAssnDialog.setResizable(false);
        selectAssnDialog.setSize(new java.awt.Dimension(415, 340));
        selectAssnDialog.setLocationRelativeTo(this);
        selectAssnDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cDialogPanel1.setBackground(new java.awt.Color(255, 255, 255));
        cDialogPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cDialogTopInternalPanel1.setBackground(new java.awt.Color(23, 35, 51));

        concealingPanel1.setBackground(new java.awt.Color(23, 35, 51));

        javax.swing.GroupLayout concealingPanel1Layout = new javax.swing.GroupLayout(concealingPanel1);
        concealingPanel1.setLayout(concealingPanel1Layout);
        concealingPanel1Layout.setHorizontalGroup(
            concealingPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        concealingPanel1Layout.setVerticalGroup(
            concealingPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 88, Short.MAX_VALUE)
        );

        cDialogText3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cDialogText3.setForeground(new java.awt.Color(255, 255, 255));
        cDialogText3.setText("Group Name:");

        javax.swing.GroupLayout cDialogTopInternalPanel1Layout = new javax.swing.GroupLayout(cDialogTopInternalPanel1);
        cDialogTopInternalPanel1.setLayout(cDialogTopInternalPanel1Layout);
        cDialogTopInternalPanel1Layout.setHorizontalGroup(
            cDialogTopInternalPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cDialogTopInternalPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(cDialogText3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cDialogTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(cDialogTopInternalPanel1Layout.createSequentialGroup()
                .addComponent(concealingPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        cDialogTopInternalPanel1Layout.setVerticalGroup(
            cDialogTopInternalPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cDialogTopInternalPanel1Layout.createSequentialGroup()
                .addComponent(concealingPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(cDialogTopInternalPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cDialogText3, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(cDialogTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );

        cDialogPanel1.add(cDialogTopInternalPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 60));

        cDialogBottomInternalPanel1.setBackground(new java.awt.Color(23, 35, 51));
        cDialogBottomInternalPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cDialogText4.setBackground(new java.awt.Color(23, 35, 51));
        cDialogText4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cDialogText4.setForeground(new java.awt.Color(255, 255, 255));
        cDialogText4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cDialogText4.setText("Assignment List");
        cDialogBottomInternalPanel1.add(cDialogText4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 399, 31));

        selectAssnTable.setBackground(new java.awt.Color(255, 255, 255));
        selectAssnTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cDialogScrollPane1.setViewportView(selectAssnTable);

        cDialogBottomInternalPanel1.add(cDialogScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 31, 399, 170));

        selectAssnButton.setText("View Artifacts");
        selectAssnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAssnButtonActionPerformed(evt);
            }
        });
        cDialogBottomInternalPanel1.add(selectAssnButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 130, 20));

        cDialogPanel1.add(cDialogBottomInternalPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 400, 240));

        selectAssnDialog.getContentPane().add(cDialogPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ReviewTool");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftPanel.setBackground(new java.awt.Color(23, 35, 51));
        leftPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        groupsButton.setBackground(new java.awt.Color(23, 35, 51));
        buttonGroup1.add(groupsButton);
        groupsButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        groupsButton.setForeground(new java.awt.Color(255, 255, 255));
        groupsButton.setSelected(true);
        groupsButton.setText("Groups");
        groupsButton.setBorder(null);
        groupsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupsButtonActionPerformed(evt);
            }
        });
        leftPanel.add(groupsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 160, 80));

        assignmentsButton.setBackground(new java.awt.Color(23, 35, 51));
        buttonGroup1.add(assignmentsButton);
        assignmentsButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        assignmentsButton.setForeground(new java.awt.Color(255, 255, 255));
        assignmentsButton.setText("Assignments");
        assignmentsButton.setBorder(null);
        assignmentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignmentsButtonActionPerformed(evt);
            }
        });
        leftPanel.add(assignmentsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 160, 90));

        getContentPane().add(leftPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 640));

        topPanel.setBackground(new java.awt.Color(71, 120, 199));

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setText("   UserName");
        usernameLabel.setText("User: " + UIController.getCurrentUser().getName());

        timeLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 614, Short.MAX_VALUE)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(topPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 1140, 80));

        middlePanel.setBackground(new java.awt.Color(255, 255, 255));
        middlePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        groupsPanel.setBackground(new java.awt.Color(255, 255, 255));
        groupsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        newGroupButton.setBackground(new java.awt.Color(255, 255, 255));
        newGroupButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newGroupButton.setForeground(new java.awt.Color(0, 0, 0));
        newGroupButton.setText("Create New Group");
        newGroupButton.setBorder(null);
        newGroupButton.setFocusPainted(false);
        newGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGroupButtonActionPerformed(evt);
            }
        });
        groupsPanel.add(newGroupButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 0, 250, 40));

        groupsInternalPanel.setBackground(new java.awt.Color(255, 255, 255));
        groupsInternalPanel.setAlignmentY(0.0F);
        groupsInternalPanel.setLayout(new javax.swing.BoxLayout(groupsInternalPanel, javax.swing.BoxLayout.Y_AXIS));
        groupsScrollPane.setViewportView(groupsInternalPanel);

        groupsPanel.add(groupsScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1140, 520));

        peerReviewEnableButton.setBackground(new java.awt.Color(255, 255, 255));
        peerReviewEnableButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        peerReviewEnableButton.setForeground(new java.awt.Color(0, 0, 0));
        peerReviewEnableButton.setText("Enable Peer Reviews");
        peerReviewEnableButton.setBorder(null);
        peerReviewEnableButton.setFocusPainted(false);
        peerReviewEnableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peerReviewEnableButtonActionPerformed(evt);
            }
        });
        groupsPanel.add(peerReviewEnableButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 0, 250, 40));

        middlePanel.add(groupsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 1140, 560));

        assignmentsPanel.setBackground(new java.awt.Color(255, 255, 255));
        assignmentsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        assignmentsInternalPanel.setBackground(new java.awt.Color(255, 255, 255));
        assignmentsInternalPanel.setLayout(new javax.swing.BoxLayout(assignmentsInternalPanel, javax.swing.BoxLayout.Y_AXIS));
        assignmentsScrollPane.setViewportView(assignmentsInternalPanel);

        assignmentsPanel.add(assignmentsScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1140, 520));

        newAssignmentButton.setBackground(new java.awt.Color(255, 255, 255));
        newAssignmentButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newAssignmentButton.setForeground(new java.awt.Color(0, 0, 0));
        newAssignmentButton.setText("Create New Assignment");
        newAssignmentButton.setBorder(null);
        newAssignmentButton.setFocusPainted(false);
        newAssignmentButton.setMaximumSize(new java.awt.Dimension(168, 40));
        newAssignmentButton.setMinimumSize(new java.awt.Dimension(168, 40));
        newAssignmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAssignmentButtonActionPerformed(evt);
            }
        });
        assignmentsPanel.add(newAssignmentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 0, 230, 40));

        middlePanel.add(assignmentsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 1140, 560));

        selectedGroupPanel.setBackground(new java.awt.Color(255, 255, 255));
        selectedGroupPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        selectedGroupScrollPane.setBackground(new java.awt.Color(255, 255, 255));

        selectedGroupInternalPanel.setBackground(new java.awt.Color(255, 255, 255));
        selectedGroupInternalPanel.setLayout(new javax.swing.BoxLayout(selectedGroupInternalPanel, javax.swing.BoxLayout.Y_AXIS));
        selectedGroupScrollPane.setViewportView(selectedGroupInternalPanel);

        selectedGroupPanel.add(selectedGroupScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1140, 520));

        addMemberButton.setBackground(new java.awt.Color(255, 255, 255));
        addMemberButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addMemberButton.setForeground(new java.awt.Color(0, 0, 0));
        addMemberButton.setText("Add New Members");
        addMemberButton.setToolTipText("");
        addMemberButton.setBorder(null);
        addMemberButton.setBorderPainted(false);
        addMemberButton.setFocusPainted(false);
        addMemberButton.setMaximumSize(new java.awt.Dimension(168, 40));
        addMemberButton.setMinimumSize(new java.awt.Dimension(168, 40));
        addMemberButton.setPreferredSize(new java.awt.Dimension(168, 40));
        addMemberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMemberButtonActionPerformed(evt);
            }
        });
        selectedGroupPanel.add(addMemberButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 0, 250, 40));

        viewArtifactsButton.setBackground(new java.awt.Color(255, 255, 255));
        viewArtifactsButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        viewArtifactsButton.setForeground(new java.awt.Color(0, 0, 0));
        viewArtifactsButton.setText("View Artifacts");
        viewArtifactsButton.setToolTipText("");
        viewArtifactsButton.setBorder(null);
        viewArtifactsButton.setBorderPainted(false);
        viewArtifactsButton.setFocusPainted(false);
        viewArtifactsButton.setMaximumSize(new java.awt.Dimension(168, 40));
        viewArtifactsButton.setMinimumSize(new java.awt.Dimension(168, 40));
        viewArtifactsButton.setPreferredSize(new java.awt.Dimension(168, 40));
        viewArtifactsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewArtifactsButtonActionPerformed(evt);
            }
        });
        selectedGroupPanel.add(viewArtifactsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 0, 250, 40));

        middlePanel.add(selectedGroupPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 1140, 560));

        peerReviewsPanel.setBackground(new java.awt.Color(255, 255, 255));
        peerReviewsPanel.setMinimumSize(new java.awt.Dimension(1140, 560));
        peerReviewsPanel.setPreferredSize(new java.awt.Dimension(1140, 560));
        peerReviewsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        prLeftPanel.setBackground(new java.awt.Color(23, 35, 51));
        prLeftPanel.setMaximumSize(new java.awt.Dimension(250, 560));
        prLeftPanel.setMinimumSize(new java.awt.Dimension(250, 560));
        prLeftPanel.setPreferredSize(new java.awt.Dimension(250, 560));
        prLeftPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));
        peerReviewsPanel.add(prLeftPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 80, 210, 480));

        prLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prLabel.setText(" Member List");
        peerReviewsPanel.add(prLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 80));

        prLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prLabel2.setText("Select a reviewer from the member list");
        peerReviewsPanel.add(prLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 930, 160));

        prScrollPane.setBorder(null);

        prTextPane.setEditable(false);
        prTextPane.setBackground(new java.awt.Color(255, 255, 255));
        prTextPane.setBorder(null);
        prTextPane.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prScrollPane.setViewportView(prTextPane);

        peerReviewsPanel.add(prScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 880, 330));

        prLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        peerReviewsPanel.add(prLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 490, 300, 70));

        middlePanel.add(peerReviewsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 1140, 560));

        viewArtifactsPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewArtifactsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vaSP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        vaIP.setBackground(new java.awt.Color(255, 255, 255));
        vaIP.setLayout(new javax.swing.BoxLayout(vaIP, javax.swing.BoxLayout.Y_AXIS));
        vaSP.setViewportView(vaIP);

        viewArtifactsPanel.add(vaSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 1140, 400));

        assnNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        assnNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        assnNameLabel.setText("Design Report Iteration 1");
        viewArtifactsPanel.add(assnNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 340, 50));

        assnLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        assnLabel3.setText("Due Date:");
        viewArtifactsPanel.add(assnLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 80, 110, 70));

        dueDateLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dueDateLabel.setText("13/8/2021");
        viewArtifactsPanel.add(dueDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 80, 160, 70));

        descSP.setBackground(new java.awt.Color(255, 255, 255));
        descSP.setBorder(null);
        descSP.setFocusable(false);

        assnDescField.setEditable(false);
        assnDescField.setBackground(new java.awt.Color(23, 35, 51));
        assnDescField.setBorder(null);
        assnDescField.setForeground(new java.awt.Color(255, 255, 255));
        descSP.setViewportView(assnDescField);

        viewArtifactsPanel.add(descSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 760, 70));

        assnLabel2.setText("Description:");
        viewArtifactsPanel.add(assnLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 90, 70));

        middlePanel.add(viewArtifactsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 1140, 560));

        artRevPanel.setBackground(new java.awt.Color(255, 255, 255));
        artRevPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        anLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        anLabel.setForeground(new java.awt.Color(0, 0, 0));
        anLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        anLabel.setText("Artifact Name");
        artRevPanel.add(anLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 284, 48));

        gnLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        gnLabel.setForeground(new java.awt.Color(0, 0, 0));
        gnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gnLabel.setText("Group Name");
        artRevPanel.add(gnLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 10, 284, 48));

        artIP.setLayout(new javax.swing.BoxLayout(artIP, javax.swing.BoxLayout.Y_AXIS));
        artSP.setViewportView(artIP);

        artRevPanel.add(artSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 66, 1114, 415));
        artRevPanel.add(avatarIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 493, 90, 61));
        artRevPanel.add(reviewTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 493, 902, 61));

        addArtReview.setText("Add Review");
        addArtReview.setFocusPainted(false);
        addArtReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addArtReviewActionPerformed(evt);
            }
        });
        artRevPanel.add(addArtReview, new org.netbeans.lib.awtextra.AbsoluteConstraints(1028, 493, -1, 61));

        downloadArtButton.setBackground(new java.awt.Color(255, 255, 255));
        downloadArtButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        downloadArtButton.setForeground(new java.awt.Color(0, 0, 0));
        downloadArtButton.setText("  Download Artifact");
        downloadArtButton.setToolTipText("");
        downloadArtButton.setBorder(null);
        downloadArtButton.setBorderPainted(false);
        downloadArtButton.setFocusPainted(false);
        downloadArtButton.setMaximumSize(new java.awt.Dimension(168, 40));
        downloadArtButton.setMinimumSize(new java.awt.Dimension(168, 40));
        downloadArtButton.setPreferredSize(new java.awt.Dimension(168, 40));
        downloadArtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadArtButtonActionPerformed(evt);
            }
        });
        artRevPanel.add(downloadArtButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, 210, 50));
        artRevPanel.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 140, 10));
        artRevPanel.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, 120, 10));

        middlePanel.add(artRevPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, -1));

        getContentPane().add(middlePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 1140, 560));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    
    /*
    ** This is event handling code for "New Group Button" in the "Groups" screen
    ** Creates a dialog box where the user can create a new group
    ** Creates an error box if there are no students in the freeUserList
    */
    private void newGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        try{
            ArrayList<User> userList = UIController.getFreeUserList();
            if(userList.size() == 0){
                throw new Exception("0");
            }
            createAssignmentDialog.setVisible(false);
            concealingPanel.setVisible(false);
            cDialogButton.setText("Create Group");
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel ) cDialogTable.getModel();
            model.setRowCount(0);
            for(User u: userList){
                model.addRow(new Object[]{u.getName(),u.getUserID(),false});
            }
            createGroupDialog.revalidate();
            createGroupDialog.setVisible(true);
        }
        catch(Exception e){
            errorText.setText("There are no unassigned students!");
            errorBox.setVisible(true);
        }
        
    }                                              

    /*
    ** Switch to "Groups" screen
    */
    private void groupsButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        switchPanel("groups");
    }                                            

    /*
    ** Switch to assignments screen
    */
    private void assignmentsButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        switchPanel("assignments");
    }                                                 

    /*
    ** Event handling code for "Create Group" button in the dialog box
    ** Gets entered group name and selected IDs, sends it to UIController class
    ** Refreshes UI in the end to account for the new group
    ** Creates an error box if the name field is empty or
    ** no students are selected.
    */
    private void cDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        try{
            aDialogButton.setText("Create Assignment");
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel ) cDialogTable.getModel();
            ArrayList<Integer> selectedIDs = new ArrayList<Integer>();
            for(int i = 0; i < model.getRowCount();i++){
                if((boolean) model.getValueAt(i,2) == true){
                    selectedIDs.add((int)model.getValueAt(i, 1));
                }
            }
            if(selectedIDs.size() == 0){
                throw new Exception("1");
            }
            if(groupsPanel.isVisible() == true){
                String groupName = cDialogTextField.getText();
                if(groupName.equals("")){
                    throw new Exception("0");
                }
                UIController.createGroup(selectedIDs,groupName); 
                addGroupToUI(UIController.getGlobalGroupList().get(UIController.getGlobalGroupList().size()-1));
            }
            else if(selectedGroupPanel.isVisible() == true){
                UIController.addMembers(selectedIDs,selectedGroup.getGroupID());
                for(int i : selectedIDs) {
                	selectedGroup.addMember(i);
                }
                showGroupMembers();
            }
            createGroupDialog.setVisible(false);
            this.revalidate();
            cDialogTextField.setText("");
            
            showInitialGroups();
        }
        catch(Exception e){
            switch(e.getMessage()){
                case "0":
                    errorText.setText("Group name cannot be blank!");
                    errorBox.setVisible(true);
                    break;
                case "1":
                    errorText.setText("No students are selected!");
                    errorBox.setVisible(true);
                    break;
            }
        }
    }                                             

    /*
    ** Creates a dialog box for entering details for a new assignment
    */
    private void newAssignmentButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        createGroupDialog.setVisible(false);
        datePicker.setDate(null);
        aDialogTextField.setText("");
        aDialogTextArea.setText("");
        aDialogButton.setText("Create Assignment");
        createAssignmentDialog.setVisible(true);
        
    }                                                   

    /*
    ** Event handling code for "Create Assignment" button in the dialog box
    ** Gets entered assignment details, sends it to UIController class
    ** Refreshes UI in the end to account for the new assignment
    ** Creates an error box if assignment name or description is empty
    */
    private void aDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {
        try{
            String aName = aDialogTextField.getText();
            String aDesc = aDialogTextArea.getText();
            if(aName.equals("") || (aDesc.equals(""))){
                throw new Exception("0");
            }

            if(aDialogButton.getText().equalsIgnoreCase("create assignment")){
                UIController.createAssignment(aName,aDesc,datePicker.getDate());
            }

            else{
                UIController.editAssignment(aName,aDesc,new Date(),datePicker.getDate());
            }
            
            assignmentsInternalPanel.removeAll();
            showInitialAssignments();
            assignmentsInternalPanel.revalidate();
            assignmentsInternalPanel.repaint();
            
            aDialogTextField.setText("");
            aDialogTextArea.setText("");
            createAssignmentDialog.setVisible(false);
        }
        catch(Exception e){
            errorText.setText("Both fields must be filled!");
            errorBox.setVisible(true);
        }
    }                                            

    /*
    ** Exact same as "Create New Group" button,
    ** but changes the text.
    */
    private void addMemberButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        try{
            ArrayList<User> userList = UIController.getFreeUserList();
            if(userList.size() == 0){
                throw new Exception("0");
            }
            createAssignmentDialog.setVisible(false);
            
            concealingPanel.setVisible(true);
            cDialogButton.setText("Add member(s)");
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel ) cDialogTable.getModel();
            model.setRowCount(0);
            for(User u: userList){
                model.addRow(new Object[]{u.getName(),u.getUserID(),false});
            }
            createGroupDialog.setVisible(true);
        }
        catch(Exception e){
            errorText.setText("There are no unassigned students!");
            errorBox.setVisible(true);
        }
    }                                               

    private void peerReviewEnableButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        if(UIController.isPeerReviewsEnabled() == true){
            UIController.setPeerReviewsEnabled(false);
            peerReviewEnableButton.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\check.png"));
            peerReviewEnableButton.setText("Enable Peer Reviewing");
        }
        else{
            UIController.setPeerReviewsEnabled(true);
            peerReviewEnableButton.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\disable.png"));
            peerReviewEnableButton.setText("Disable Peer Reviewing");
        }
    }                                                      

    private void errorButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        errorBox.setVisible(false);
    }                                           

    private void viewArtifactsButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel ) selectAssnTable.getModel();
        model.setRowCount(0);
        for(Assignment a: UIController.getAllAssignments(selectedGroup.getGroupID())){
            model.addRow(new Object[]{a.getName(),false});
        }
        selectAssnDialog.setVisible(true);
        
    }                                                   

    private void addArtReviewActionPerformed(java.awt.event.ActionEvent evt) {
        UIController.addArtifactReview(UIController.getCurrentUser().getUserID(),UIController.getCurrentUser().getName(), reviewTF.getText(), selectedArtifact, selectedAssignment.getName(), selectedGroup.getGroupID());
        selectedReviews.add(new ArtifactReview(UIController.getCurrentUser().getUserID(),reviewTF.getText(),new Date(),-5,UIController.getCurrentUser().getName()));
        artIP.removeAll();
        createArtifactReviewPanel(selectedArtifact,selectedReviews);
        artIP.revalidate();
    }                                           

    private void downloadArtButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        UIController.downloadArtifact(addArtReview.getName(), UIController.getGlobalGroupList().get(0).getGroupID(), selectedArtifact);
    }                                                 

    private void selectAssnButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel ) selectAssnTable.getModel();
        ArrayList<String> selectedAssn = new ArrayList<>();
        for(int i = 0; i < model.getRowCount();i++){
            if((boolean) model.getValueAt(i,1) == true){
                selectedAssn.add((String) model.getValueAt(i, 0));
            }
        }
        
        if(selectedAssn.size() == 0){
            errorText.setText("You didn't select any assignments");
            errorBox.setVisible(true);
        }
        
        else if(selectedAssn.size() > 1){
            errorText.setText("Select only one assignment");
            errorBox.setVisible(true);
            selectedAssn.clear();
        }
        
        else{
            for(Assignment a: UIController.getAllAssignments(selectedGroup.getGroupID())){
                if(selectedAssn.get(0).equalsIgnoreCase(a.getName())){
                    showArtifacts(a);
                    switchPanel("artifacts");
                    selectAssnDialog.setVisible(false);
                    assnNameLabel.setText(a.getName());
                    assnDescField.setText(a.getDescription());
                    break;
                }
            }
        }
    }                                                

    private void switchPanel(String type){
        for(JPanel pn: switchingPanels){
            pn.setVisible(false);
        }
        
        if(type.equalsIgnoreCase("groups")){
            groupsPanel.setVisible(true);
        }
        
        else if(type.equalsIgnoreCase("assignments")){
            assignmentsPanel.setVisible(true);
        }
        
        else if(type.equalsIgnoreCase("selectedGroup")){
            selectedGroupPanel.setVisible(true);
        }
        
        else if(type.equalsIgnoreCase("peerReviews")){
            peerReviewsPanel.setVisible(true);
        }
        
        else if(type.equalsIgnoreCase("artifacts")){
            viewArtifactsPanel.setVisible(true);
        }
        
        else if(type.equalsIgnoreCase("artReviews")){
            artRevPanel.setVisible(true);
        }
        
        prLeftPanel.removeAll();
    }
    
    /*
    ** Event handling code for "View Group" button (eye symbol)
    ** Shows an empty panel for displaying the selected group.
    ** The panel is filled by showGroupMembers() function
    */
    public void groupViewButtonActionPerformed(Group gr){
    	if(gr == null){
            return;
        }
        ArrayList<Group> allGroups = UIController.getGlobalGroupList();
        for(Group iter: allGroups){
        	if(iter == null) {
        		continue;
        	}
            if(gr.getGroupID() == iter.getGroupID()){
                selectedGroup = gr;
                break;
            }
        }
        switchPanel("selectedGroup");
        showGroupMembers();
    }
    
    // NEEDS IMPLEMENTATION
    private void assignmentViewButtonActionPerformed(Assignment a){                               
        createGroupDialog.setVisible(false);
        aDialogTextField.setText(a.getName());
        aDialogTextArea.setText(a.getDescription());
        datePicker.setDate(a.getDueDate());
        aDialogButton.setText("Edit Assignment");
        createAssignmentDialog.setVisible(true);
    }
    
    // Removes the selected user from group and refreshes UI
    private void removeMemberButtonActionPerformed(User u){
        int id = u.getUserID();
        UIController.removeMember(id);

        selectedGroup.removeMember(id);
        showGroupMembers();
        
    }
    
    private void artifactReviewButtonActionPerformed(String artName,ArrayList<ArtifactReview> reviews){
        switchPanel("artReviews");
        selectedArtifact = artName;
        selectedReviews = reviews;
        createArtifactReviewPanel(artName,reviews);
        reviewTF.setText("");
    }
    
    private void createArtifactReviewPanel(String artName,ArrayList<ArtifactReview> reviews){
        artIP.removeAll();
        gnLabel.setText("Group " + selectedGroup.getGroupID());
        anLabel.setText(artName);
        for(ArtifactReview artR : reviews){
            UIPanel artRevPanel = PanelFactory.createPanel("artRevPanel");
            artRevPanel.setLabel(artR.getWriter());
            artRevPanel.setLabel2(artR.getText());

            if(UIController.getUserData(artR.getWriterID()).getClass().getSimpleName().equalsIgnoreCase("instructor")){
                artRevPanel.setColor(new Color(133,137,229));
            }
            if(UIController.getUserData(artR.getWriterID()).getClass().getSimpleName().equalsIgnoreCase("TA")){
                artRevPanel.setColor(new Color(183, 156, 1));
            }

            artIP.add(artRevPanel);
            artIP.add(javax.swing.Box.createVerticalGlue());
        }

        addArtReview.setName(artName);
        artSP.getVerticalScrollBar().setUnitIncrement(16);
    }
    
    private void viewReviewsButtonActionPerformed(User targetUser){
        selectedUser = ((Student) targetUser);
        switchPanel("peerReviews");
        createPeerReviewPanel(targetUser);
    }
    
    private void createPeerReviewPanel(User targetUser){
        selectedUser = ((Student) targetUser);
        int count = 0;
        for(PeerReview ur: UIController.getAllPeerReviews(selectedUser.getUserID())){
            count++;
            UIPanel smallMemberPanel = PanelFactory.createPanel("smallMember");
            buttonGroup2.add(smallMemberPanel.getToggleButton());
            smallMemberPanel.getToggleButton().setText(UIController.getSTUser(ur.getGiverID()).getName());
            smallMemberPanel.getToggleButton().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallMemberButtonActionPerformed(ur,UIController.getSTUser(ur.getGiverID()).getName());
                }
            });

            prLabel2.setText("Select a reviewer from the member list");
            prTextPane.setText("");
            prLabel3.setText("");
            prLeftPanel.add(smallMemberPanel);
            buttonGroup2.clearSelection();
        }

        if(count == 0){
            prLabel2.setText("No reviews made for " + selectedUser.getName() + " yet");
            prTextPane.setText("");
            prLabel3.setText("");
        }
    }
    
    private void smallMemberButtonActionPerformed(PeerReview ur,String reviewerName){
        prLabel2.setText(reviewerName + "'s Peer Review of " + selectedUser.getName());
        prTextPane.setText("   " + ur.getDescription());
        DecimalFormat df = new DecimalFormat("#.##");
        prLabel3.setText("Point: " + df.format(ur.getGrade()) + "/100");
    }
    
    private void editAssignmentButtonActionPerformed(Assignment a){
        Date startDate = a.getStartDate();
        aDialogTextField.setText("");
        aDialogTextArea.setText("");
        datePicker.setDate(null);
        aDialogButton.setText("Edit Assignment");
        String assnTitle = aDialogTextField.getText();
        String assnDesc = aDialogTextArea.getText();
        Date dueDate = datePicker.getDate();
        UIController.editAssignment(assnTitle,assnDesc,startDate,dueDate);
        createAssignmentDialog.setVisible(false);
        
        assignmentsInternalPanel.removeAll();
        showInitialAssignments();
        assignmentsInternalPanel.revalidate();
        assignmentsInternalPanel.repaint();
    }
    
    /*
    ** Adds a single group to the "Groups" panel display
    ** Gets called as many times as there are existing groups
    ** Also gets called when a new group is created
    ** The group panel is created by PanelFactory
    */
    private void addGroupToUI(Group gr){
    	if(gr == null){
            return;
        }
        UIPanel newGroupPanel = PanelFactory.createPanel("group");
        
        newGroupPanel.setLabel("Group " + gr.getGroupID());
        
        newGroupPanel.getViewButton().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupViewButtonActionPerformed(gr);
            }
        });
        
        groupsInternalPanel.add(newGroupPanel);
        groupsInternalPanel.add(javax.swing.Box.createVerticalGlue());
    }
    
    /*
    ** Adds a single assignment to the "Assigments" panel display
    ** Gets called as many times as there are existing assignments
    ** Also gets called when a new assignment is created
    ** The assignment panel is created by PanelFactory
    */
    private void addAssignmentToUI(Assignment a){
        
        UIPanel newAssignmentPanel = PanelFactory.createPanel("assignment");
        
        newAssignmentPanel.setLabel(a.getName());
            
        newAssignmentPanel.getViewButton().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignmentViewButtonActionPerformed(a);
            }
        });
        
        newAssignmentPanel.getRemoveButton().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAssignmentButtonActionPerformed(a);
            }
        });
            
        assignmentsInternalPanel.add(newAssignmentPanel);
        assignmentsInternalPanel.add(javax.swing.Box.createVerticalGlue());
    }
    
    /*
    ** Adds a single group member to the "View Group" panel display
    ** Gets called as many times as there are existing members
    ** Also gets called when a member is added or removed
    ** The member panel is created by PanelFactory
    */
    private void addMemberToUI(User u){

        UIPanel newMemberPanel = PanelFactory.createPanel("member");

        newMemberPanel.setLabel(u.getUserID() + "," + u.getName());

        newMemberPanel.getRemoveButton().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMemberButtonActionPerformed(u);
            }
        });
        newMemberPanel.getReviewButton().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReviewsButtonActionPerformed(u);
            }
        });

        selectedGroupInternalPanel.add(newMemberPanel);
        selectedGroupInternalPanel.add(javax.swing.Box.createVerticalGlue());

    }

    /*
    ** Adds inital data stored in permanent data to the UI 
    */
    private void showInitialAssignments(){
    	for(Assignment iter: UIController.getAllAssignments(UIController.getGlobalGroupList().get(0).getGroupID())){
            addAssignmentToUI(iter);
        }
        assignmentsScrollPane.getVerticalScrollBar().setUnitIncrement(16);
    }
    
    /*
    ** Adds inital data stored in permanent data to the UI 
    */
    private void showInitialGroups(){
    	groupsInternalPanel.removeAll();
        ArrayList<Group> groupData= UIController.getGlobalGroupList();
        for(Group gr : groupData){
            addGroupToUI(gr);
        }
        groupsScrollPane.getVerticalScrollBar().setUnitIncrement(16);
        groupsInternalPanel.revalidate();
        groupsInternalPanel.repaint();
    }
    
    /*
    ** Adds inital data stored in permanent data to the UI 
    */
    private void showGroupMembers(){
    	selectedGroupInternalPanel.removeAll();
        for(int u: selectedGroup.getMembers()){
            addMemberToUI(UIController.getSTUser(u));
        }
        selectedGroupScrollPane.getVerticalScrollBar().setUnitIncrement(16);
        
        
        selectedGroupInternalPanel.revalidate();
        selectedGroupInternalPanel.repaint();
    }

   
    
    /*
    ** Shows time on the top right corner
    */
    public void showTime() {
        Timer timer = new Timer(1000, new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                timeLabel.setText(new SimpleDateFormat("H:mm:ss").format(new Date()));
                timeLabel.repaint();
            }
        });
        timeLabel.setText(new SimpleDateFormat("H:mm:ss").format(new Date()));
        timer.start();
        
    }
    
    /*
    ** Display icons in the "img" folder
    */
    public void setIcons(){
        newGroupButton.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\add.png"));
        newAssignmentButton.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\add.png"));
        addMemberButton.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\add.png"));
        if(UIController.isPeerReviewsEnabled() == true){
            peerReviewEnableButton.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\disable.png"));
            peerReviewEnableButton.setText("Disable Peer Reviewing");
        }
        else{
            peerReviewEnableButton.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\check.png"));
            peerReviewEnableButton.setText("Enable Peer Reviewing");
        }
        
        avatarIcon.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\user.png"));
        viewArtifactsButton.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\view.png"));
    }
    
    private void showArtifacts(Assignment a){
        vaIP.removeAll();
        HashMap<String,File> artifacts = a.getArtifacts();
        for(String art: artifacts.keySet()){
            addArtifactToUI(art,a.getArtifactReviews().get(art));
        }
        vaSP.getVerticalScrollBar().setUnitIncrement(16);
        selectedAssignment = a;
    }
    
    private void addArtifactToUI(String artName, ArrayList<ArtifactReview> reviews){
        UIPanel artPanel = PanelFactory.createPanel("artPanel");
        artPanel.setLabel(artName);
        if(reviews == null || reviews.size() == 0 ){
            artPanel.setLabel2("Pending for Review");
        }
        
        else{
            artPanel.setLabel2("Submitted");
        }
        
        artPanel.getReviewButton().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artifactReviewButtonActionPerformed(artName,reviews);
            }
        });
        
        vaIP.add(artPanel);
        vaIP.add(javax.swing.Box.createVerticalGlue());
    }
    
    private void removeAssignmentButtonActionPerformed(Assignment a){
        UIController.removeAssignment(a.getTitle());

        assignmentsInternalPanel.removeAll();
        showInitialAssignments();
        assignmentsInternalPanel.revalidate();
        assignmentsInternalPanel.repaint();
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton aDialogButton;
    private javax.swing.JPanel aDialogPanel;
    private javax.swing.JLabel aDialogText1;
    private javax.swing.JLabel aDialogText2;
    private javax.swing.JLabel aDialogText3;
    private javax.swing.JTextPane aDialogTextArea;
    private javax.swing.JTextField aDialogTextField;
    private javax.swing.JButton addArtReview;
    private javax.swing.JButton addMemberButton;
    private javax.swing.JLabel anLabel;
    private javax.swing.JPanel artIP;
    private javax.swing.JPanel artRevPanel;
    private javax.swing.JScrollPane artSP;
    private javax.swing.JToggleButton assignmentsButton;
    private javax.swing.JPanel assignmentsInternalPanel;
    private javax.swing.JPanel assignmentsPanel;
    private javax.swing.JScrollPane assignmentsScrollPane;
    private javax.swing.JTextPane assnDescField;
    private javax.swing.JLabel assnLabel2;
    private javax.swing.JLabel assnLabel3;
    private javax.swing.JLabel assnNameLabel;
    private javax.swing.JLabel avatarIcon;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel cDialogBottomInternalPanel;
    private javax.swing.JPanel cDialogBottomInternalPanel1;
    private javax.swing.JButton cDialogButton;
    private javax.swing.JPanel cDialogPanel;
    private javax.swing.JPanel cDialogPanel1;
    private javax.swing.JScrollPane cDialogScrollPane;
    private javax.swing.JScrollPane cDialogScrollPane1;
    private javax.swing.JTable cDialogTable;
    private javax.swing.JLabel cDialogText1;
    private javax.swing.JLabel cDialogText2;
    private javax.swing.JLabel cDialogText3;
    private javax.swing.JLabel cDialogText4;
    private javax.swing.JTextField cDialogTextField;
    private javax.swing.JTextField cDialogTextField1;
    private javax.swing.JPanel cDialogTopInternalPanel;
    private javax.swing.JPanel cDialogTopInternalPanel1;
    private javax.swing.JPanel concealingPanel;
    private javax.swing.JPanel concealingPanel1;
    private javax.swing.JDialog createAssignmentDialog;
    private javax.swing.JDialog createGroupDialog;
    private com.toedter.calendar.JDateChooser datePicker;
    private javax.swing.JScrollPane descSP;
    private javax.swing.JButton downloadArtButton;
    private javax.swing.JLabel dueDateLabel;
    private javax.swing.JDialog errorBox;
    private javax.swing.JPanel errorBoxPanel;
    private javax.swing.JButton errorButton;
    private javax.swing.JLabel errorText;
    private javax.swing.JLabel gnLabel;
    private javax.swing.JToggleButton groupsButton;
    private javax.swing.JPanel groupsInternalPanel;
    private javax.swing.JPanel groupsPanel;
    private javax.swing.JScrollPane groupsScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JButton newAssignmentButton;
    private javax.swing.JButton newGroupButton;
    private javax.swing.JButton peerReviewEnableButton;
    private javax.swing.JPanel peerReviewsPanel;
    private javax.swing.JLabel prLabel;
    private javax.swing.JLabel prLabel2;
    private javax.swing.JLabel prLabel3;
    private javax.swing.JPanel prLeftPanel;
    private javax.swing.JScrollPane prScrollPane;
    private javax.swing.JTextPane prTextPane;
    private javax.swing.JTextField reviewTF;
    private javax.swing.JButton selectAssnButton;
    private javax.swing.JDialog selectAssnDialog;
    private javax.swing.JTable selectAssnTable;
    private javax.swing.JPanel selectedGroupInternalPanel;
    private javax.swing.JPanel selectedGroupPanel;
    private javax.swing.JScrollPane selectedGroupScrollPane;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JPanel vaIP;
    private javax.swing.JScrollPane vaSP;
    private javax.swing.JButton viewArtifactsButton;
    private javax.swing.JPanel viewArtifactsPanel;
    // End of variables declaration                   
}

