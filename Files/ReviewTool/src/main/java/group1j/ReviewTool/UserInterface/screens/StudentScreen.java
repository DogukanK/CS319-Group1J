/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package group1j.ReviewTool.UserInterface.screens;

import group1j.ReviewTool.BusinessLogic.PeerReview;
import group1j.ReviewTool.BusinessLogic.User;
import group1j.ReviewTool.BusinessLogic.Group;
import group1j.ReviewTool.BusinessLogic.ArtifactReview;
import group1j.ReviewTool.BusinessLogic.Assignment;
import group1j.ReviewTool.BusinessLogic.Student;
import group1j.ReviewTool.BusinessLogic.*;
import group1j.ReviewTool.UserInterface.*;
import group1j.ReviewTool.UserInterface.factories.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.*;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author anilt
 */
public class StudentScreen extends javax.swing.JFrame implements ScreenInterface{

    
    private ArrayList<JPanel> switchingPanels;
    private Student targetStudent;
    private Assignment selectedAssignment;
    private String selectedArtifact = "";
    private ArrayList<ArtifactReview> selectedArtReviews;
    
    /**
     * Creates new form StudentScreen
     */
    public StudentScreen() {
        initComponents();
        switchingPanels = new ArrayList<>();
        switchingPanels.add(myGroupPanel);
        switchingPanels.add(peerReviewPanel);
        switchingPanels.add(selectedAssignmentPanel);
        switchingPanels.add(assignmentsPanel);
        switchingPanels.add(artRevPanel);
        setIcons();
        switchPanel("mygroup");
    }
    
    public void refreshUI(){
        myGroupInternalPanel.removeAll();
        showMembers();
        myGroupInternalPanel.validate();
        myGroupInternalPanel.repaint();
        
        assignmentsInternalPanel.removeAll();
        showInitialAssignments();
        assignmentsInternalPanel.validate();
        assignmentsInternalPanel.repaint();
        
        if(selectedAssignment != null){
            saInternalPanel.removeAll();
            showSelectedAssignment();
            saInternalPanel.validate();
            saInternalPanel.repaint();
        }
        
        if(selectedArtifact.equals("") == false){
            artIP.removeAll();
            showArtifactReviews();
            artIP.validate();
            artIP.repaint();
        }
        
        this.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        uploadFC = new javax.swing.JFileChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        errorBox = new javax.swing.JDialog();
        errorBoxPanel = new javax.swing.JPanel();
        errorText = new javax.swing.JLabel();
        errorButton = new javax.swing.JButton();
        artNameBox = new javax.swing.JDialog();
        artNamePanel = new javax.swing.JPanel();
        artNameLabel = new javax.swing.JLabel();
        artNameButton = new javax.swing.JButton();
        artNameField = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        leftPanel = new javax.swing.JPanel();
        myGroupButton = new javax.swing.JToggleButton();
        myGroupButton.setFocusPainted(false);
        assignmentsButton = new javax.swing.JToggleButton();
        assignmentsButton.setFocusPainted(false);
        topPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        showTime();
        grNameLabel = new javax.swing.JLabel();
        middlePanel = new javax.swing.JPanel();
        myGroupPanel = new javax.swing.JPanel();
        myGroupSP = new javax.swing.JScrollPane();
        myGroupInternalPanel = new javax.swing.JPanel();
        showMembers();
        peerReviewPanel = new javax.swing.JPanel();
        prLabel1 = new javax.swing.JLabel();
        prLabel2 = new javax.swing.JLabel();
        prLabel3 = new javax.swing.JLabel();
        updateReviewButton = new javax.swing.JButton();
        prSp2 = new javax.swing.JScrollPane();
        commentArea = new javax.swing.JTextPane();
        prTF1 = new javax.swing.JTextField();
        prTF2 = new javax.swing.JTextField();
        assignmentsPanel = new javax.swing.JPanel();
        assignmentsScrollPane = new javax.swing.JScrollPane();
        assignmentsInternalPanel = new javax.swing.JPanel();
        showInitialAssignments();
        selectedAssignmentPanel = new javax.swing.JPanel();
        saSP = new javax.swing.JScrollPane();
        saInternalPanel = new javax.swing.JPanel();
        uploadArtifactButton = new javax.swing.JButton();
        assnNameLabel = new javax.swing.JLabel();
        assnLabel3 = new javax.swing.JLabel();
        dueDateLabel = new javax.swing.JLabel();
        descSP = new javax.swing.JScrollPane();
        assnDescField = new javax.swing.JTextPane();
        assnLabel2 = new javax.swing.JLabel();
        artRevPanel = new javax.swing.JPanel();
        anLabel = new javax.swing.JLabel();
        gnLabel = new javax.swing.JLabel();
        artSP = new javax.swing.JScrollPane();
        artIP = new javax.swing.JPanel();
        jSeparator6 = new javax.swing.JSeparator();
        avatarIcon = new javax.swing.JLabel();
        reviewTF = new javax.swing.JTextField();
        addArtReview = new javax.swing.JButton();
        downloadArtButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();

        uploadFC.setFileFilter(new FileNameExtensionFilter("*.pdf", "pdf"));

        errorBox.setTitle("Error");
        errorBox.setModal(true);
        errorBox.setSize(new java.awt.Dimension(250, 250));
        errorBox.setLocationRelativeTo(this);
        errorBox.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        errorBoxPanel.setBackground(new java.awt.Color(23, 35, 51));

        errorText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errorText.setForeground(new java.awt.Color(255, 255, 255));
        errorText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorText.setText("ERROR TEXT");

        errorButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errorButton.setText("OK");
        errorButton.setBorderPainted(false);
        errorButton.setFocusPainted(false);
        errorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout errorBoxPanelLayout = new javax.swing.GroupLayout(errorBoxPanel);
        errorBoxPanel.setLayout(errorBoxPanelLayout);
        errorBoxPanelLayout.setHorizontalGroup(
            errorBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(errorText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, errorBoxPanelLayout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addComponent(errorButton)
                .addGap(86, 86, 86))
        );
        errorBoxPanelLayout.setVerticalGroup(
            errorBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorBoxPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(errorText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(errorButton)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        errorBox.getContentPane().add(errorBoxPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 220));

        artNameBox.setTitle("Enter Artifact Name");
        artNameBox.setModal(true);
        artNameBox.setSize(new java.awt.Dimension(250, 250));
        artNameBox.setLocationRelativeTo(this);
        artNameBox.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        artNamePanel.setBackground(new java.awt.Color(23, 35, 51));

        artNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        artNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        artNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        artNameLabel.setText("Enter Artifact Name");

        artNameButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        artNameButton.setText("OK");
        artNameButton.setBorderPainted(false);
        artNameButton.setFocusPainted(false);
        artNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artNameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout artNamePanelLayout = new javax.swing.GroupLayout(artNamePanel);
        artNamePanel.setLayout(artNamePanelLayout);
        artNamePanelLayout.setHorizontalGroup(
            artNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(artNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(artNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(artNameField)
                    .addComponent(artNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, artNamePanelLayout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addComponent(artNameButton)
                .addGap(79, 79, 79))
        );
        artNamePanelLayout.setVerticalGroup(
            artNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(artNamePanelLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(artNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(artNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(artNameButton)
                .addGap(30, 30, 30))
        );

        artNameBox.getContentPane().add(artNamePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 220));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ReviewTool");
        setMinimumSize(new java.awt.Dimension(1300, 640));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftPanel.setBackground(new java.awt.Color(23, 35, 51));
        leftPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        myGroupButton.setBackground(new java.awt.Color(23, 35, 51));
        buttonGroup1.add(myGroupButton);
        myGroupButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        myGroupButton.setForeground(new java.awt.Color(255, 255, 255));
        myGroupButton.setSelected(true);
        myGroupButton.setText("My Group");
        myGroupButton.setBorder(null);
        myGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myGroupButtonActionPerformed(evt);
            }
        });
        leftPanel.add(myGroupButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 160, 80));

        assignmentsButton.setBackground(new java.awt.Color(23, 35, 51));
        buttonGroup1.add(assignmentsButton);
        assignmentsButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        assignmentsButton.setForeground(new java.awt.Color(255, 255, 255));
        assignmentsButton.setText("Assignments");
        assignmentsButton.setBorder(null);
        assignmentsButton.setFocusPainted(false);
        assignmentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignmentsButtonActionPerformed(evt);
            }
        });
        leftPanel.add(assignmentsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 160, 90));

        getContentPane().add(leftPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 640));

        topPanel.setBackground(new java.awt.Color(71, 120, 199));

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setText("   UserName");
        usernameLabel.setText("User: " + UIController.getCurrentUser().getName());

        timeLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 255, 255));

        grNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        grNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        grNameLabel.setText(" GroupName");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 298, Short.MAX_VALUE)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(grNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(timeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(topPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 1140, 80));

        middlePanel.setBackground(new java.awt.Color(255, 255, 255));
        middlePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        myGroupPanel.setBackground(new java.awt.Color(255, 255, 255));
        myGroupPanel.setMinimumSize(new java.awt.Dimension(1140, 560));
        myGroupPanel.setPreferredSize(new java.awt.Dimension(1140, 560));
        myGroupPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        myGroupSP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        myGroupSP.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        myGroupInternalPanel.setBackground(new java.awt.Color(255, 255, 255));
        myGroupInternalPanel.setLayout(new javax.swing.BoxLayout(myGroupInternalPanel, javax.swing.BoxLayout.Y_AXIS));
        myGroupSP.setViewportView(myGroupInternalPanel);

        myGroupPanel.add(myGroupSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 560));

        middlePanel.add(myGroupPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 560));

        peerReviewPanel.setBackground(new java.awt.Color(255, 255, 255));
        peerReviewPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        prLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prLabel1.setText("Your Peer Review of User1's Performance");
        peerReviewPanel.add(prLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 914, 114));

        prLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        prLabel2.setText("Your Comment:");
        peerReviewPanel.add(prLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 130, 46));

        prLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        prLabel3.setText("Given Grade:");
        peerReviewPanel.add(prLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, 110, 50));

        updateReviewButton.setBackground(new java.awt.Color(23, 35, 51));
        updateReviewButton.setForeground(new java.awt.Color(255, 255, 255));
        updateReviewButton.setText("Update Review");
        updateReviewButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateReviewButton.setBorderPainted(false);
        updateReviewButton.setFocusPainted(false);
        updateReviewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateReviewButtonActionPerformed(evt);
            }
        });
        peerReviewPanel.add(updateReviewButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 440, 140, 60));

        commentArea.setBackground(new java.awt.Color(23, 35, 51));
        commentArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        commentArea.setForeground(new java.awt.Color(255, 255, 255));
        commentArea.setText(" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean lobortis magna vitae consectetur tempor. Aliquam eu molestie justo. Integer quis diam feugiat, vulputate elit non, consequat dui. Sed vitae felis purus. Nulla sagittis commodo elit nec lobortis. Praesent rhoncus, neque sed interdum scelerisque, ante nunc scelerisque ligula, vitae iaculis augue nulla sit amet nisl. Morbi egestas diam sit amet odio molestie maximus at vel erat. Integer consequat mi sit amet nunc sodales, nec vehicula libero congue.");
        prSp2.setViewportView(commentArea);

        peerReviewPanel.add(prSp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 730, 250));

        prTF1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        prTF1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prTF1.setText("10");
        prTF1.setBorder(null);
        prTF1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        peerReviewPanel.add(prTF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 430, 30, 50));

        prTF2.setEditable(false);
        prTF2.setBackground(new java.awt.Color(255, 255, 255));
        prTF2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        prTF2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prTF2.setText("/ 10");
        prTF2.setBorder(null);
        prTF2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        prTF2.setFocusable(false);
        prTF2.setHighlighter(null);
        peerReviewPanel.add(prTF2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 40, 50));

        middlePanel.add(peerReviewPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 560));

        assignmentsPanel.setBackground(new java.awt.Color(255, 255, 255));
        assignmentsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        assignmentsScrollPane.setBorder(null);

        assignmentsInternalPanel.setBackground(new java.awt.Color(255, 255, 255));
        assignmentsInternalPanel.setLayout(new javax.swing.BoxLayout(assignmentsInternalPanel, javax.swing.BoxLayout.Y_AXIS));
        assignmentsScrollPane.setViewportView(assignmentsInternalPanel);

        assignmentsPanel.add(assignmentsScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 560));

        middlePanel.add(assignmentsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 1140, 560));

        selectedAssignmentPanel.setBackground(new java.awt.Color(255, 255, 255));
        selectedAssignmentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        saSP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        saInternalPanel.setBackground(new java.awt.Color(255, 255, 255));
        saInternalPanel.setLayout(new javax.swing.BoxLayout(saInternalPanel, javax.swing.BoxLayout.Y_AXIS));
        saSP.setViewportView(saInternalPanel);

        selectedAssignmentPanel.add(saSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 1140, 400));

        uploadArtifactButton.setBackground(new java.awt.Color(255, 255, 255));
        uploadArtifactButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        uploadArtifactButton.setForeground(new java.awt.Color(0, 0, 0));
        uploadArtifactButton.setText("Upload Artifact");
        uploadArtifactButton.setToolTipText("");
        uploadArtifactButton.setBorder(null);
        uploadArtifactButton.setBorderPainted(false);
        uploadArtifactButton.setFocusPainted(false);
        uploadArtifactButton.setMaximumSize(new java.awt.Dimension(168, 40));
        uploadArtifactButton.setMinimumSize(new java.awt.Dimension(168, 40));
        uploadArtifactButton.setPreferredSize(new java.awt.Dimension(168, 40));
        uploadArtifactButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadArtifactButtonActionPerformed(evt);
            }
        });
        selectedAssignmentPanel.add(uploadArtifactButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 0, 250, 40));

        assnNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        assnNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        assnNameLabel.setText("Design Report Iteration 1");
        selectedAssignmentPanel.add(assnNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 340, 50));

        assnLabel3.setText("Due Date:");
        selectedAssignmentPanel.add(assnLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 80, 110, 70));

        dueDateLabel.setText("13/8/2021");
        selectedAssignmentPanel.add(dueDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 80, 160, 70));

        descSP.setBackground(new java.awt.Color(255, 255, 255));
        descSP.setBorder(null);
        descSP.setFocusable(false);

        assnDescField.setEditable(false);
        assnDescField.setBackground(new java.awt.Color(23, 35, 51));
        assnDescField.setBorder(null);
        assnDescField.setForeground(new java.awt.Color(255, 255, 255));
        descSP.setViewportView(assnDescField);

        selectedAssignmentPanel.add(descSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 760, 70));

        assnLabel2.setText("Description:");
        selectedAssignmentPanel.add(assnLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 90, 70));

        middlePanel.add(selectedAssignmentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 1140, 560));

        artRevPanel.setBackground(new java.awt.Color(255, 255, 255));
        artRevPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        anLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        anLabel.setForeground(new java.awt.Color(0, 0, 0));
        anLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        anLabel.setText("Artifact Name");
        artRevPanel.add(anLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 284, 48));

        gnLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        gnLabel.setForeground(new java.awt.Color(0, 0, 0));
        gnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gnLabel.setText("Group Name");
        artRevPanel.add(gnLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 10, 284, 48));

        artIP.setLayout(new javax.swing.BoxLayout(artIP, javax.swing.BoxLayout.Y_AXIS));
        artIP.add(jSeparator6);

        artSP.setViewportView(artIP);

        artRevPanel.add(artSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 66, 1114, 415));
        artRevPanel.add(avatarIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 493, 90, 61));
        artRevPanel.add(reviewTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 493, 902, 61));

        addArtReview.setText("Add Review");
        addArtReview.setFocusPainted(false);
        addArtReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addArtReviewActionPerformed(evt);
            }
        });
        artRevPanel.add(addArtReview, new org.netbeans.lib.awtextra.AbsoluteConstraints(1028, 493, -1, 61));

        downloadArtButton.setBackground(new java.awt.Color(255, 255, 255));
        downloadArtButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        downloadArtButton.setForeground(new java.awt.Color(0, 0, 0));
        downloadArtButton.setText("  Download Artifact");
        downloadArtButton.setToolTipText("");
        downloadArtButton.setBorder(null);
        downloadArtButton.setBorderPainted(false);
        downloadArtButton.setFocusPainted(false);
        downloadArtButton.setMaximumSize(new java.awt.Dimension(168, 40));
        downloadArtButton.setMinimumSize(new java.awt.Dimension(168, 40));
        downloadArtButton.setPreferredSize(new java.awt.Dimension(168, 40));
        downloadArtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadArtButtonActionPerformed(evt);
            }
        });
        artRevPanel.add(downloadArtButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, 210, 50));
        artRevPanel.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 140, 10));
        artRevPanel.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, 120, 10));

        middlePanel.add(artRevPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(middlePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 1140, 560));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void myGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        switchPanel("myGroup");
    }                                             

    private void updateReviewButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        if(UIController.isPeerReviewsEnabled() == true){
            UIController.updatePeerReview(UIController.getCurrentUser().getUserID(),targetStudent.getUserID(),commentArea.getText(),Integer.parseInt(prTF1.getText()));
            switchPanel("mygroup");
        }
        else{
            errorText.setText("Peer reviews are disabled!");
            errorBox.setVisible(true);
        }
    }                                                  

    private void uploadArtifactButtonActionPerformed(java.awt.event.ActionEvent evt) {
        int result = uploadFC.showOpenDialog(new JFrame());
        if(result == uploadFC.APPROVE_OPTION){
            File selectedFile = uploadFC.getSelectedFile();
            artNameField.setText("");
            artNameBox.setVisible(true);
            String artName = artNameField.getText();
            UIController.uploadFile(selectedFile, artNameField.getText() + selectedAssignment.getArtifacts().keySet().size(), ((Student) UIController.getCurrentUser()).getGroupID(), ((JButton) evt.getSource()).getName());
        }

        ArrayList<Assignment>  grAssignments = UIController.getAllAssignments(UIController.getGlobalGroupList().get(0).getGroupID());
        for(Assignment assn: grAssignments){
            if(selectedAssignment.getAssignmentID() == assn.getAssignmentID()){
                selectedAssignment = assn;
                break;
            }
        }

        showArtifacts(selectedAssignment);
    }                                                    

    private void assignmentsButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        switchPanel("assignments");
    }                                                 

    private void errorButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        errorBox.setVisible(false);
    }                                           

    private void addArtReviewActionPerformed(java.awt.event.ActionEvent evt) {
        if(addArtReview.getText().equals("Add Review")){
            UIController.addArtifactReview(UIController.getCurrentUser().getUserID(),UIController.getCurrentUser().getName(), reviewTF.getText(), ((JButton) evt.getSource()).getName(), uploadArtifactButton.getName(), UIController.getGlobalGroupList().get(0).getGroupID());
            selectedArtReviews.add(new ArtifactReview(UIController.getCurrentUser().getUserID(),reviewTF.getText(),new Date(),-5,UIController.getCurrentUser().getName()));
        }
        else{
            UIController.editArtifactReview(selectedAssignment.getAssignmentID(),selectedArtifact,UIController.getCurrentUser().getUserID(),reviewTF.getText(),UIController.getCurrentUser().getName());
            Iterator<ArtifactReview> iter = selectedArtReviews.iterator();

            while(iter.hasNext()){
                ArtifactReview ar = iter.next();

                if(ar.getWriter().equals(UIController.getCurrentUser().getName())){
                    selectedArtReviews.remove(ar);
                    break;
                }
            }
            selectedArtReviews.add(new ArtifactReview(UIController.getCurrentUser().getUserID(),reviewTF.getText(),new Date(),-5,UIController.getCurrentUser().getName()));
        }

        showArtifactReviews();
    }                                      

    private void downloadArtButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        UIController.downloadArtifact(addArtReview.getName(), UIController.getGlobalGroupList().get(0).getGroupID(), uploadArtifactButton.getName());
    }                                                 

    private void artNameButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        artNameBox.setVisible(false);
    }                                             
    
    private void artifactRemoveButtonActionPerformed(String artName){
        UIController.removeArtifact(artName, UIController.getGlobalGroupList().get(0).getGroupID(), uploadArtifactButton.getName());
        ArrayList<Assignment>  grAssignments = UIController.getAllAssignments(UIController.getGlobalGroupList().get(0).getGroupID());
        for(Assignment assn: grAssignments){
            if(selectedAssignment.getAssignmentID() == assn.getAssignmentID()){
                selectedAssignment = assn;
                break;
            }
        }

        showArtifacts(selectedAssignment);
    }
    
    private void assignmentViewButtonActionPerformed(Assignment a){
        switchPanel("selectedAssn");
        selectedAssignment = a;
        showSelectedAssignment();
    }
    
    private void showSelectedAssignment(){
        assnNameLabel.setText(selectedAssignment.getName());
        assnDescField.setText(selectedAssignment.getDescription());
        showArtifacts(selectedAssignment);
        uploadArtifactButton.setName(selectedAssignment.getName());
    }
    
    private void reviewButtonActionPerformed(Student targetSt){
        switchPanel("peerreviews");
        targetStudent = targetSt;
        showPeerReviews();
    }
    
    private void showPeerReviews(){
        prLabel1.setText("Your Peer Review of " + targetStudent.getName() + "'s Performance");
        PeerReview review = null;
        for(PeerReview iter: targetStudent.getReviews()){
            if(UIController.getSTUser(iter.getGiverID()).getName().equalsIgnoreCase(UIController.getCurrentUser().getName())){
                review = iter;
                break;
            }
        }
        
        if(review != null){
            commentArea.setText(review.getDescription());
            prTF1.setText("" + review.getGrade());
        }
        
        else{
            commentArea.setText("");
            prTF1.setText("");
        }
        
    }
    
    
    private void artifactReviewButtonActionPerformed(String artName,ArrayList<ArtifactReview> reviews){
        artIP.removeAll();
        selectedArtifact = artName;
        selectedArtReviews = reviews;
        switchPanel("artReviews");
        showArtifactReviews();
    }
    
    private void showArtifactReviews(){
        artIP.removeAll();
        gnLabel.setText("Group " + ((Student) UIController.getCurrentUser()).getGroupID());
        anLabel.setText(selectedArtifact);
        for(ArtifactReview artR : selectedArtReviews){
            UIPanel artRevPanel = PanelFactory.createPanel("artRevPanel");
            artRevPanel.setLabel(artR.getWriter());
            artRevPanel.setLabel2(artR.getText());

            if(UIController.getUserData(artR.getWriterID()).getClass().getSimpleName().equalsIgnoreCase("instructor")){
                artRevPanel.setColor(new Color(133,137,229));
            }
            if(UIController.getUserData(artR.getWriterID()).getClass().getSimpleName().equalsIgnoreCase("TA")){
                artRevPanel.setColor(new Color(183, 156, 1));
            }

            artIP.add(artRevPanel);
            artIP.add(javax.swing.Box.createVerticalGlue());
        }

        for(ArtifactReview iter: selectedArtReviews){
            if(iter.getWriter().equals(UIController.getCurrentUser().getName())){
                addArtReview.setText("Edit Review");
                addArtReview.setName(selectedArtifact);
                artSP.getVerticalScrollBar().setUnitIncrement(16);
                return;
            }
        }

        addArtReview.setText("Add Review");
        addArtReview.setName(selectedArtifact);
        artSP.getVerticalScrollBar().setUnitIncrement(16);
    }
    
    private void switchPanel(String type){
        for(JPanel pn: switchingPanels){
            pn.setVisible(false);
        }

        if(type.equalsIgnoreCase("mygroup")){
            myGroupPanel.setVisible(true);
            myGroupPanel.revalidate();
            myGroupPanel.repaint();
        }

        else if(type.equalsIgnoreCase("assignments")){
            assignmentsPanel.setVisible(true);
            assignmentsPanel.revalidate();
            assignmentsPanel.repaint();
        }

        else if(type.equalsIgnoreCase("peerReviews")){
            peerReviewPanel.setVisible(true);
            peerReviewPanel.revalidate();
            peerReviewPanel.repaint();
        }

        else if(type.equalsIgnoreCase("selectedAssn")){
            selectedAssignmentPanel.setVisible(true);
            selectedAssignmentPanel.revalidate();
            selectedAssignmentPanel.repaint();
        }

        else if(type.equalsIgnoreCase("artReviews")){
            artRevPanel.setVisible(true);
            artRevPanel.revalidate();
            artRevPanel.repaint();
        }
    }
    
    private void showTime() {
        Timer timer = new Timer(1000, new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                timeLabel.setText(new SimpleDateFormat("H:mm:ss").format(new Date()));
                timeLabel.repaint();
            }
        });
        timeLabel.setText(new SimpleDateFormat("H:mm:ss").format(new Date()));
        timer.start();
        
    }
    
    private void showMembers(){
        myGroupSP.getVerticalScrollBar().setUnitIncrement(16);
        Group selectedGroup = UIController.getGlobalGroupList().get(0);
        
        for(int iter: selectedGroup.getMembers()){
            User u = UIController.getSTUser(iter);
            
            
            UIPanel memberPanel = PanelFactory.createPanel("stMember");
            
            memberPanel.setLabel(u.getName());
            
            memberPanel.setLabel2(u.getClass().getSimpleName());
            if(u.getClass().getSimpleName().equalsIgnoreCase("ta")){
                memberPanel.setLabel2("Teaching Assistant");
            }
            JButton bt = memberPanel.getReviewButton();
            
            if(u.getClass().getSimpleName().equalsIgnoreCase("Student")){
                bt.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            reviewButtonActionPerformed((Student) u);
                        }
                    });
            }
            
            else{
                bt.setVisible(false);
            }
            if(u.getName().equals(UIController.getCurrentUser().getName())){
                memberPanel.getReviewButton().setVisible(false);
            }
            myGroupInternalPanel.add(memberPanel);
            myGroupInternalPanel.add(javax.swing.Box.createVerticalGlue());
        }
        
        myGroupInternalPanel.add(Box.createRigidArea(new Dimension(15, 15)));
    }
    
    /*
    ** Adds a single assignment to the "Assigments" panel display
    ** Gets called as many times as there are existing assignments
    ** Also gets called when a new assignment is created
    ** The assignment panel is created by PanelFactory
    */
    private void addAssignmentToUI(Assignment a){
        
        UIPanel newAssignmentPanel = PanelFactory.createPanel("assignment");
        
        newAssignmentPanel.setLabel(a.getName());
            
        newAssignmentPanel.getViewButton().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignmentViewButtonActionPerformed(a);
            }
        });
        
        newAssignmentPanel.getViewButton().setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\view.png"));
        newAssignmentPanel.getRemoveButton().setVisible(false);
        assignmentsInternalPanel.add(newAssignmentPanel);
        assignmentsInternalPanel.add(javax.swing.Box.createVerticalGlue());
    }
    
    private void addArtifactToUI(String artName, ArrayList<ArtifactReview> reviews){
        UIPanel artPanel = PanelFactory.createPanel("artPanel");
        artPanel.setLabel(artName);
        if(reviews == null || reviews.size() == 0 ){
            artPanel.setLabel2("Pending for Review");
        }
        
        else{
            artPanel.setLabel2("Submitted");
        }
        
        artPanel.getRemoveButton().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artifactRemoveButtonActionPerformed(artName);
            }
        });
        
        artPanel.getReviewButton().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artifactReviewButtonActionPerformed(artName,reviews);
            }
        });
        
        saInternalPanel.add(artPanel);
        saInternalPanel.add(javax.swing.Box.createVerticalGlue());
    }
    
    /*
    ** Adds inital data stored in permanent data to the UI 
    */
    private void showInitialAssignments(){
        ArrayList<Assignment> allAssignments = UIController.getAllAssignments();
        for(Assignment a : allAssignments) {
            addAssignmentToUI(a);
        }
        assignmentsScrollPane.getVerticalScrollBar().setUnitIncrement(16);
    }
    
    private void showArtifacts(Assignment a){
        saInternalPanel.removeAll();
        HashMap<String,File> artifacts = a.getArtifacts();
        for(String art: artifacts.keySet()){
            addArtifactToUI(art,a.getArtifactReviews().get(art));
        }
        saSP.getVerticalScrollBar().setUnitIncrement(16);
        saInternalPanel.revalidate();
        saInternalPanel.repaint();
    }
    
    public void setIcons(){
        grNameLabel.setText("Group " + ((Student) UIController.getCurrentUser()).getGroupID());
        uploadArtifactButton.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\upload.png"));
        avatarIcon.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\user.png"));
        downloadArtButton.setIcon(new javax.swing.ImageIcon("src\\main\\java\\group1j\\ReviewTool\\UserInterface\\img\\download.png"));
        descSP.getVerticalScrollBar().setPreferredSize(new Dimension(0,0));
        prTF2.setText("/100");
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton addArtReview;
    private javax.swing.JLabel anLabel;
    private javax.swing.JPanel artIP;
    private javax.swing.JDialog artNameBox;
    private javax.swing.JButton artNameButton;
    private javax.swing.JTextField artNameField;
    private javax.swing.JLabel artNameLabel;
    private javax.swing.JPanel artNamePanel;
    private javax.swing.JPanel artRevPanel;
    private javax.swing.JScrollPane artSP;
    private javax.swing.JToggleButton assignmentsButton;
    private javax.swing.JPanel assignmentsInternalPanel;
    private javax.swing.JPanel assignmentsPanel;
    private javax.swing.JScrollPane assignmentsScrollPane;
    private javax.swing.JTextPane assnDescField;
    private javax.swing.JLabel assnLabel2;
    private javax.swing.JLabel assnLabel3;
    private javax.swing.JLabel assnNameLabel;
    private javax.swing.JLabel avatarIcon;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextPane commentArea;
    private javax.swing.JScrollPane descSP;
    private javax.swing.JButton downloadArtButton;
    private javax.swing.JLabel dueDateLabel;
    private javax.swing.JDialog errorBox;
    private javax.swing.JPanel errorBoxPanel;
    private javax.swing.JButton errorButton;
    private javax.swing.JLabel errorText;
    private javax.swing.JLabel gnLabel;
    private javax.swing.JLabel grNameLabel;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JToggleButton myGroupButton;
    private javax.swing.JPanel myGroupInternalPanel;
    private javax.swing.JPanel myGroupPanel;
    private javax.swing.JScrollPane myGroupSP;
    private javax.swing.JPanel peerReviewPanel;
    private javax.swing.JLabel prLabel1;
    private javax.swing.JLabel prLabel2;
    private javax.swing.JLabel prLabel3;
    private javax.swing.JScrollPane prSp2;
    private javax.swing.JTextField prTF1;
    private javax.swing.JTextField prTF2;
    private javax.swing.JTextField reviewTF;
    private javax.swing.JPanel saInternalPanel;
    private javax.swing.JScrollPane saSP;
    private javax.swing.JPanel selectedAssignmentPanel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JButton updateReviewButton;
    private javax.swing.JButton uploadArtifactButton;
    private javax.swing.JFileChooser uploadFC;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration                   
}
